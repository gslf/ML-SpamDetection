# :#/ GSLF
# Gioele SL Fierro
# 2021
#
# SpamDetection DOCS

NAME
    SpamDetector

DESCRIPTION
    # :#/ GSLF
    # Gioele SL Fierro
    # 2021

CLASSES
    builtins.object
        SpamDetector
    
    class SpamDetector(builtins.object)
     |  SpamDetector(dataset_path, labels_path, train_test_ratio=0.7)
     |  
     |  An effective tool for SPAM classification that use Nive Bayes classification, a simple Machine Learning technique.
     |  
     |  ...
     |  
     |  Attributes
     |  ----------
     |  dataset_path : str
     |      Path of the "trec07" dataset
     |  labels_path : str
     |      Path of the labels for the selected dataset
     |  train_test_ratio : float
     |      Ratio betweet train set and test set (Default value - 0.7).
     |  
     |  Methods
     |  -------
     |  startTraining():
     |      Train the classifier.
     |  
     |  loadWeights(weights_path):
     |      Load weights from previous training.
     |  
     |  classify(mail_path):
     |      Classify an email
     |  
     |  Methods defined here:
     |  
     |  __init__(self, dataset_path, labels_path, train_test_ratio=0.7)
     |      Constructor
     |  
     |  classify(self, mail_path)
     |      Classify an email from file
     |      
     |      Parameters
     |      ----------
     |      mail_path : str, required
     |          The path of the mail message
     |      
     |      Returns
     |      -------
     |      result : string
     |          Result of classification
     |              "SPAM" > The mail is spam
     |              "HAM" > The mail isn't spam
     |              "ERROR: . . . " > An error as occourred
     |  
     |  loadWeights(self, weights_path='weights.h5')
     |      Load a pretrained classifier
     |      
     |      Parameters
     |      ----------
     |      weights_path : str, optional
     |          Path of the weights file (default is "weights.h5")
     |      
     |      Returns
     |      -------
     |      result : boolean
     |          Result of file loading
     |  
     |  startTraining(self, weights_path='weights.h5')
     |      Train a classifier and save weights to file
     |      
     |      Parameters
     |      ----------
     |      weights_path : str, optional
     |          Path of the weights file (default is "weights.h5")
     |      
     |      Returns
     |      -------
     |      result : boolean
     |          Result of training session
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)



